import { useState } from 'react';
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Accordion, AccordionItem } from "@/components/ui/accordion";

export default function HomePage() {
  const [email, setEmail] = useState("");
  const [cart, setCart] = useState([]);
  const [user, setUser] = useState({ name: "–ì—ñ—Å—Ç—å", bonuses: 10 });
  const [chatOpen, setChatOpen] = useState(false);
  const [chatMessages, setChatMessages] = useState([
    { from: "bot", text: "–ü—Ä–∏–≤—ñ—Ç! –Ø –ë—É–±—É—Å—ñ–∫ ‚Äî —Ç–≤—ñ–π —Ñ–∞—Ä–º-–≥—ñ–¥ üíä –ó–∞–ø–∏—Ç–∞–π —â–æ—Å—å –∞–±–æ –æ–±–µ—Ä–∏ —Ç–µ–º—É –Ω–∏–∂—á–µ." }
  ]);

  const handleSubmit = (e) => {
    e.preventDefault();
    alert(`–¢–∏ –∑ –Ω–∞–º–∏, ${email}! –û—á—ñ–∫—É–π –ª–∏—Å—Ç —ñ–∑ —Å—é—Ä–ø—Ä–∏–∑–æ–º üíå`);
    setEmail("");
  };

  const handleAddToCart = (product) => {
    setCart([...cart, product]);
    alert(`${product.name} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞ üõí`);
  };

  const handleChatMessage = (text) => {
    setChatMessages([...chatMessages, { from: "user", text }, { from: "bot", text: getBotReply(text) }]);
  };

  const getBotReply = (text) => {
    const lower = text.toLowerCase();
    if (lower.includes("–≤—Ç–æ–º–∞")) return "–°–ø—Ä–æ–±—É–π Solvit Ferrum ‚Äî —Ç–≤—ñ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –¥–∂–µ—Ä–µ–ª–æ –µ–Ω–µ—Ä–≥—ñ—ó.";
    if (lower.includes("—Å—Ç—Ä–µ—Å")) return "Stressnol –¥–æ–ø–æ–º–∞–≥–∞—î –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏—Å—è –¥–æ —Å—Ç—Ä–µ—Å—É ‚Äî –±–µ–∑ –∑–≤–∏–∫–∞–Ω–Ω—è.";
    if (lower.includes("—Å–æ–Ω")) return "–ú–∞–≥–Ω–µ–§–æ–ª ‚Äî –º º—è–∫–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ç–≤–æ—î—ó –Ω–µ—Ä–≤–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏.";
    return "–Ø —â–µ –Ω–∞–≤—á–∞—é—Å—å üòâ –∞–ª–µ –º–æ–∂—É –ø—ñ–¥–∫–∞–∑–∞—Ç–∏ —â–æ—Å—å —ñ–∑ –∫–∞—Ç–∞–ª–æ–≥—É.";
  };

  const products = [
    {
      name: "Solvit Ferrum",
      tags: ["#–≤—Ç–æ–º–∞", "#–∑–∞–ª—ñ–∑–æ", "#—Ä–æ–±–æ—Ç–∞"],
      image: "/images/ferrum.png",
      description: "–ü–æ–≤–µ—Ä—Ç–∞—î –µ–Ω–µ—Ä–≥—ñ—é, –∫–æ–ª–∏ –æ—Ä–≥–∞–Ω—ñ–∑–º –∫–∞–∂–µ '–¥–æ—Å–∏—Ç—å'. –Ü–¥–µ–∞–ª—å–Ω–∏–π –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –≤—Ç–æ–º–ª—é—î—Ç—å—Å—è –≤—ñ–¥ —Å–∞–º–æ—ó –¥—É–º–∫–∏ –ø—Ä–æ –∑—É–º."
    },
    {
      name: "Stressnol",
      tags: ["#—Å—Ç—Ä–µ—Å", "#–∫–∞–≤–∞", "#–Ω–µ—Ä–≤–∏"],
      image: "/images/stressnol.png",
      description: "–ú º—è–∫–∏–π –∞–¥–∞–ø—Ç–æ–≥–µ–Ω, —â–æ –Ω–µ –ø—Ä–∏—Ç—É–ø–ª—é—î, –∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î. –°—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –º—ñ—Å—å–∫–∏—Ö –∞–º–∞–∑–æ–Ω–æ–∫."
    },
    {
      name: "–ú–∞–≥–Ω–µ–§–æ–ª",
      tags: ["#—Å–æ–Ω", "#–≤–∞–≥—ñ—Ç–Ω—ñ—Å—Ç—å", "#—Å–ø–æ–∫—ñ–π"],
      image: "/images/magnekvin-f.png",
      description: "–•–µ–ª–∞—Ç–Ω–∞ —Ñ–æ—Ä–º–∞ –º–∞–≥–Ω—ñ—é + B6 + —Ñ–æ–ª–∞—Ç. –î–ª—è –≥–ª–∏–±–æ–∫–æ–≥–æ —Å–Ω—É —Ç–∞ —â–µ –≥–ª–∏–±—à–æ–≥–æ –≤–∏–¥–∏—Ö—É."
    },
    {
      name: "–ê—Ä—Ç–∏—Ñ–∞—Ä",
      tags: ["#–ø–µ—á—ñ–Ω–∫–∞", "#–≤–∞–∂–∫—ñ—Å—Ç—å", "#–∂–æ–≤—á"],
      image: "/images/artifar.png",
      description: "–¢–≤–æ—è –ø–µ—á—ñ–Ω–∫–∞ —Å–∫–∞–∂–µ –¥—è–∫—É—é. –ê —Ç–∏ –ø—Ä–æ—Å—Ç–æ –∑–Ω–æ–≤—É –∑–º–æ–∂–µ—à –∑ º—ó—Å—Ç–∏ —â–æ—Å—å —Å–º–∞—á–Ω–µ –±–µ–∑ –≤—ñ–¥—á—É—Ç—Ç—è –∫–∞–º–µ–Ω—è."
    },
    {
      name: "–ì–µ–ø–∞–Ω–µ–∫—Å",
      tags: ["#—Ç—Ä–∞–≤–ª–µ–Ω–Ω—è", "#–¥–µ—Ç–æ–∫—Å", "#–∫–æ–º–±–æ"],
      image: "/images/hepanex.png",
      description: "–ü—Ä–∞—Ü—é—î –≤ –ø–∞—Ä—ñ –∑ –ê—Ä—Ç–∏—Ñ–∞—Ä–æ–º —è–∫ –¥–æ–±—Ä–∏–π –¥—Ä—É–≥ –ø—ñ—Å–ª—è –≤–∞–∂–∫–æ–≥–æ –∑–∞—Å—Ç—ñ–ª–ª—è. –ü—Ä–æ—Ç–∏ –≤–∞–∂–∫–æ—Å—Ç—ñ –π —Ç–æ–∫—Å–∏–Ω—ñ–≤."
    }
  ];

  const getUpsell = (cartItems) => {
    const allTags = cartItems.flatMap((item) => item.tags);
    const suggested = products.find(
      (p) => !cartItems.includes(p) && p.tags.some((tag) => allTags.includes(tag))
    );
    return suggested;
  };

  const upsell = getUpsell(cart);

  return (
    <div className="bg-white text-gray-900 px-6 py-20 lg:px-24 space-y-24 relative">

      {/* –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ */}
      <div className="max-w-6xl mx-auto space-y-10">
        <h2 className="text-3xl font-bold text-center">–ù–∞—à—ñ –ø—Ä–æ–¥—É–∫—Ç–∏</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {products.map((product, index) => (
            <Card key={index} className="hover:shadow-lg transition">
              <CardContent className="p-6 space-y-4">
                {product.image && (
                  <img src={product.image} alt={product.name} className="w-full h-48 object-contain rounded-xl" />
                )}
                <h3 className="text-xl font-semibold">{product.name}</h3>
                <p className="text-sm text-gray-500">{product.tags.join(' ')}</p>
                <p className="text-gray-700">{product.description}</p>
                <Button className="bg-blue-600 text-white hover:bg-blue-700 w-full" onClick={() => handleAddToCart(product)}>
                  –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>

      {/* –ß–∞—Ç –∑ –ë—É–±—É—Å—ñ–∫–æ–º */}
      <div className="fixed bottom-6 right-6 z-50">
        <Button onClick={() => setChatOpen(!chatOpen)} className="rounded-full p-4 shadow-xl bg-pink-500 text-white">
          üí¨
        </Button>
        {chatOpen && (
          <div className="w-80 h-96 bg-white border border-gray-300 shadow-lg rounded-xl p-4 mt-4 flex flex-col">
            <div className="flex-1 overflow-y-auto space-y-2">
              {chatMessages.map((msg, idx) => (
                <div key={idx} className={`text-sm p-2 rounded-lg ${msg.from === "bot" ? "bg-blue-100 text-left" : "bg-green-100 text-right"}`}>
                  {msg.text}
                </div>
              ))}
            </div>
            <form onSubmit={(e) => {
              e.preventDefault();
              const text = e.target.elements.chat.value;
              handleChatMessage(text);
              e.target.reset();
            }} className="flex gap-2 mt-2">
              <Input name="chat" placeholder="–ù–∞–ø–∏—à–∏ —â–æ—Å—å..." className="flex-1" />
              <Button type="submit">‚¨Ü</Button>
            </form>
          </div>
        )}
      </div>

    </div>
  );
}
